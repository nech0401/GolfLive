@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization

<MudThemeProvider Theme="currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => DrawerToggle())" />
        <MudIconButton Icon="@Icons.Material.Outlined.AccountCircle" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => DarkMode())" />
        <MudIconButton Icon="@Icons.Material.Outlined.Settings" Color="Color.Inherit" Edge="Edge.False" OnClick="@(e => GoToSettings())">
            <MudNavLink Href="/settings"></MudNavLink>
        </MudIconButton>
        <AuthorizeView>
            <Authorized>
                Hello, @context.User.Identity.Name!
                <a href="/.auth/logout?post_logout_redirect_uri=/">Log out</a>
            </Authorized>
            <NotAuthorized>
                <a href="/login-providers">Log in</a>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = true;
    private bool _isLightMode = true;
    private MudTheme currentTheme = new MudTheme();

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    protected override void OnInitialized()
    {
        currentTheme = defaultTheme;
    }

    void GoToSettings()
    {
        NavigationManager.NavigateTo("/settings");
    }

    void DarkMode()
    {
        if (currentTheme == defaultTheme)
        {
            currentTheme = darkTheme;
        }
        else
        {
            currentTheme = defaultTheme;
        }
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    MudTheme defaultTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#ffffff",
            BackgroundGrey = "#27272f",
            Surface = "#003c82",
            DrawerBackground = "#003c82",
            DrawerText = "#ffffff",
            DrawerIcon = "#ffffff",
            AppbarBackground = "#c81414",
            AppbarText = "#ffffff",
            TextPrimary = "#003c82",
            TextSecondary = "#c81414",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "#003c82",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        }
    };

    MudTheme darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#ffffff",
            BackgroundGrey = "#27272f",
            Surface = "#fff803",
            DrawerBackground = "#fff803",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#003c82",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        }
    };
}